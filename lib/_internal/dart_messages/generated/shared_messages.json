{
  "exampleMessage": {
    "id": "use an Id generated by bin/message_id.dart",
    "subId": 0,
    "category": "AnalysisOptionsError",
    "template": "#use #named #arguments",
    "templateHoleOrder": [
      "arguments",
      "named",
      "use"
    ],
    "howToFix": "an explanation on how to fix things",
    "options": null,
    "usedBy": [],
    "examples": [
      "      Some multiline example;\n      That generates the bug.",
      {
        "fileA.dart": "        or a map from file to content.\n        again multiline",
        "fileB.dart": "        with possibly multiple files.\n        muliline too"
      }
    ]
  },
  "CONST_CONSTRUCTOR_OR_FACTORY_WITH_BODY": {
    "id": "LGJGHW",
    "subId": 0,
    "category": "ParserError",
    "template": "Const constructor or factory can't have a body.",
    "templateHoleOrder": null,
    "howToFix": "Remove the 'const' keyword or the body.",
    "options": null,
    "usedBy": [
      "Platform.dart2js"
    ],
    "examples": [
      "         class C {\n           const C() {}\n         }\n\n         main() => new C();",
      "         class C {\n           const factory C() {}\n         }\n\n         main() => new C();"
    ]
  },
  "CONST_CONSTRUCTOR_WITH_BODY": {
    "id": "LGJGHW",
    "subId": 1,
    "category": "ParserError",
    "template": "Const constructor can't have a body.",
    "templateHoleOrder": null,
    "howToFix": "Try removing the 'const' keyword or the body.",
    "options": null,
    "usedBy": [
      "Platform.analyzer"
    ],
    "examples": [
      "         class C {\n           const C() {}\n         }\n\n         main() => new C();"
    ]
  },
  "CONST_FACTORY": {
    "id": "LGJGHW",
    "subId": 2,
    "category": "ParserError",
    "template": "Only redirecting factory constructors can be declared to be 'const'.",
    "templateHoleOrder": null,
    "howToFix": "Try removing the 'const' keyword or replacing the body with '=' followed by a valid target.",
    "options": null,
    "usedBy": [
      "Platform.analyzer"
    ],
    "examples": [
      "         class C {\n           const factory C() {}\n         }\n\n         main() => new C();"
    ]
  },
  "EXTRANEOUS_MODIFIER": {
    "id": "GRKIQE",
    "subId": 0,
    "category": "ParserError",
    "template": "Can't have modifier '#{modifier}' here.",
    "templateHoleOrder": null,
    "howToFix": "Try removing '#{modifier}'.",
    "options": null,
    "usedBy": [
      "Platform.dart2js"
    ],
    "examples": [
      "var String foo; main(){}",
      "var set foo; main(){}",
      "var final foo; main(){}",
      "var var foo; main(){}",
      "var const foo; main(){}",
      "var abstract foo; main(){}",
      "var static foo; main(){}",
      "var external foo; main(){}",
      "get var foo; main(){}",
      "set var foo; main(){}",
      "final var foo; main(){}",
      "var var foo; main(){}",
      "const var foo; main(){}",
      "abstract var foo; main(){}",
      "static var foo; main(){}",
      "external var foo; main(){}"
    ]
  },
  "EXTRANEOUS_MODIFIER_REPLACE": {
    "id": "GRKIQE",
    "subId": 1,
    "category": "ParserError",
    "template": "Can't have modifier '#{modifier}' here.",
    "templateHoleOrder": null,
    "howToFix": "Try replacing modifier '#{modifier}' with 'var', 'final', or a type.",
    "options": null,
    "usedBy": [
      "Platform.dart2js"
    ],
    "examples": [
      "set foo; main(){}",
      "abstract foo; main(){}",
      "static foo; main(){}",
      "external foo; main(){}"
    ]
  },
  "CONST_CLASS": {
    "id": "GRKIQE",
    "subId": 2,
    "category": "ParserError",
    "template": "Classes can't be declared to be 'const'",
    "templateHoleOrder": null,
    "howToFix": "Try removing the 'const' keyword or moving to the class' constructor(s).",
    "options": null,
    "usedBy": [
      "Platform.analyzer"
    ],
    "examples": [
      "        const class C {}\n\n        main() => new C();\n        "
    ]
  },
  "CONST_METHOD": {
    "id": "GRKIQE",
    "subId": 3,
    "category": "ParserError",
    "template": "Getters, setters and methods can't be declared to be 'const'",
    "templateHoleOrder": null,
    "howToFix": "Try removing the 'const' keyword.",
    "options": null,
    "usedBy": [
      "Platform.analyzer"
    ],
    "examples": [
      "const int foo() => 499; main() {}",
      "const int get foo => 499; main() {}",
      "const set foo(v) => 499; main() {}",
      "class A { const int foo() => 499; } main() { new A(); }",
      "class A { const int get foo => 499; } main() { new A(); }",
      "class A { const set foo(v) => 499; } main() { new A(); }"
    ]
  },
  "CONST_ENUM": {
    "id": "GRKIQE",
    "subId": 4,
    "category": "ParserError",
    "template": "Enums can't be declared to be 'const'",
    "templateHoleOrder": null,
    "howToFix": "Try removing the 'const' keyword.",
    "options": null,
    "usedBy": [
      "Platform.analyzer"
    ],
    "examples": [
      "const enum Foo { x } main() {}"
    ]
  },
  "CONST_TYPEDEF": {
    "id": "GRKIQE",
    "subId": 5,
    "category": "ParserError",
    "template": "Type aliases can't be declared to be 'const'",
    "templateHoleOrder": null,
    "howToFix": "Try removing the 'const' keyword.",
    "options": null,
    "usedBy": [
      "Platform.analyzer"
    ],
    "examples": [
      "const typedef void Foo(); main() {}"
    ]
  },
  "CONST_AND_FINAL": {
    "id": "GRKIQE",
    "subId": 6,
    "category": "ParserError",
    "template": "Members can't be declared to be both 'const' and 'final'",
    "templateHoleOrder": null,
    "howToFix": "Try removing either the 'const' or 'final' keyword.",
    "options": null,
    "usedBy": [
      "Platform.analyzer"
    ],
    "examples": [
      "final const int x = 499; main() {}",
      "const final int x = 499; main() {}",
      "class A { static final const int x = 499; } main() {}",
      "class A { static const final int x = 499; } main() {}"
    ]
  },
  "CONST_AND_VAR": {
    "id": "GRKIQE",
    "subId": 7,
    "category": "ParserError",
    "template": "Members can't be declared to be both 'const' and 'var'",
    "templateHoleOrder": null,
    "howToFix": "Try removing either the 'const' or 'var' keyword.",
    "options": null,
    "usedBy": [
      "Platform.analyzer"
    ],
    "examples": [
      "var const x = 499; main() {}",
      "const var x = 499; main() {}",
      "class A { var const x = 499; } main() {}",
      "class A { const var x = 499; } main() {}"
    ]
  },
  "CLASS_IN_CLASS": {
    "id": "DOTHQH",
    "subId": 0,
    "category": "ParserError",
    "template": "Classes can't be declared inside other classes.",
    "templateHoleOrder": null,
    "howToFix": "Try moving the class to the top-level.",
    "options": null,
    "usedBy": [
      "Platform.analyzer"
    ],
    "examples": [
      "class A { class B {} } main() { new A(); }"
    ]
  },
  "CONSTRUCTOR_WITH_RETURN_TYPE": {
    "id": "VOJBWY",
    "subId": 0,
    "category": "ParserError",
    "template": "Constructors can't have a return type",
    "templateHoleOrder": null,
    "howToFix": "Try removing the return type.",
    "options": null,
    "usedBy": [
      "Platform.analyzer",
      "Platform.dart2js"
    ],
    "examples": [
      "class A { int A() {} } main() { new A(); }"
    ]
  },
  "MISSING_EXPRESSION_IN_THROW": {
    "id": "FTGGMJ",
    "subId": 0,
    "category": "ParserError",
    "template": "Missing expression after 'throw'.",
    "templateHoleOrder": null,
    "howToFix": "Did you mean 'rethrow'?",
    "options": null,
    "usedBy": [
      "Platform.analyzer",
      "Platform.dart2js"
    ],
    "examples": [
      "main() { throw; }",
      "main() { try { throw 0; } catch(e) { throw; } }"
    ]
  },
  "RETHROW_OUTSIDE_CATCH": {
    "id": "MWETLC",
    "subId": 0,
    "category": "CompileTimeError",
    "template": "Rethrow must be inside of catch clause",
    "templateHoleOrder": null,
    "howToFix": "Try moving the expression into a catch clause, or using a 'throw' expression.",
    "options": null,
    "usedBy": [
      "Platform.analyzer",
      "Platform.dart2js"
    ],
    "examples": [
      "main() { rethrow; }"
    ]
  },
  "RETURN_IN_GENERATIVE_CONSTRUCTOR": {
    "id": "UOTDQH",
    "subId": 0,
    "category": "CompileTimeError",
    "template": "Constructors can't return values.",
    "templateHoleOrder": null,
    "howToFix": "Try removing the return statement or using a factory constructor.",
    "options": null,
    "usedBy": [
      "Platform.analyzer",
      "Platform.dart2js"
    ],
    "examples": [
      "        class C {\n          C() {\n            return 1;\n          }\n        }\n\n        main() => new C();"
    ]
  },
  "RETURN_IN_GENERATOR": {
    "id": "JRUTUQ",
    "subId": 0,
    "category": "CompileTimeError",
    "template": "Can't return a value from a generator function (using the '#{modifier}' modifier).",
    "templateHoleOrder": null,
    "howToFix": "Try removing the value, replacing 'return' with 'yield' or changing the method body modifier",
    "options": null,
    "usedBy": [
      "Platform.analyzer",
      "Platform.dart2js"
    ],
    "examples": [
      "        foo() async* { return 0; }\n        main() => foo();\n        ",
      "        foo() sync* { return 0; }\n        main() => foo();\n        "
    ]
  }
}